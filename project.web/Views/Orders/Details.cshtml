@model project.models.Orders.GetOrderModel

@{
    ViewData["Title"] = "Details";
}

<div class="container">
    <h1>Details</h1>

    <div>
        <h4>GetOrderModel</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Id)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.UserId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.UserId)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Orderdate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Orderdate)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Products)
            </dt>
            <dd class="col-sm-10">
                @foreach (var product in Model.Products)
                {
                    <ul>
                        <li>@Localizer["Naam"]: <b> @product.Name</b></li>
                        <li>@Localizer["Hoeveelheid"]: <b>@product.Quantity</b></li>
                        <li>@Localizer["Prijs"]: <b>€ @product.Price</b></li>
                    </ul>

                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.totalPrice)
            </dt>
            <dd class="col-sm-10">
                <b>€ @Html.DisplayFor(model => model.totalPrice)</b>
            </dd>

        </dl>
    </div>
    <div>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        <a asp-action="Index">Back to List</a>
    </div>

</div>