<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Achternaam" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="Adres" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Adres id" xml:space="preserve">
    <value>Address id</value>
  </data>
  <data name="Bedrijf" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Bedrijfsnaam" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="Bestandstype" xml:space="preserve">
    <value>File type</value>
  </data>
  <data name="Bovenstaande categorie" xml:space="preserve">
    <value>Parent category</value>
  </data>
  <data name="Categorie" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Categorienaam" xml:space="preserve">
    <value>Category name</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="De achternaam moet ingevuld worden" xml:space="preserve">
    <value>The surname must be filled in</value>
  </data>
  <data name="De categorie moet ingevuld worden" xml:space="preserve">
    <value>The category must be filled in</value>
  </data>
  <data name="De gebruikersnaam moet ingevuld worden" xml:space="preserve">
    <value>The username must be filled in</value>
  </data>
  <data name="De landcode moet ingevuld worden" xml:space="preserve">
    <value>The country code must be filled in</value>
  </data>
  <data name="De naam moet ingevuld worden" xml:space="preserve">
    <value>The name must be filled in</value>
  </data>
  <data name="De naam van de rol moet ingevuld worden" xml:space="preserve">
    <value>The name of the role must be filled in</value>
  </data>
  <data name="De omschrijving moet ingevuld worden" xml:space="preserve">
    <value>The description must be filled in</value>
  </data>
  <data name="De parent moet ingevuld worden" xml:space="preserve">
    <value>The parent must be filled in</value>
  </data>
  <data name="De postcode is minimum 1 en maximum 10000" xml:space="preserve">
    <value>The postal code is minimum 1 and maximum 10000</value>
  </data>
  <data name="De postcode moet ingevuld worden" xml:space="preserve">
    <value>The postal code must be filled in</value>
  </data>
  <data name="De prijs moet ingevuld worden" xml:space="preserve">
    <value>The price must be filled in</value>
  </data>
  <data name="De productnaam moet ingevuld worden" xml:space="preserve">
    <value>The product name must be filled in</value>
  </data>
  <data name="De stad moet ingevuld worden" xml:space="preserve">
    <value>The city must be filled in</value>
  </data>
  <data name="De straat moet ingevuld worden" xml:space="preserve">
    <value>The street must be filled in</value>
  </data>
  <data name="De voornaam moet ingevuld worden" xml:space="preserve">
    <value>The first name must be filled in</value>
  </data>
  <data name="De voorraad moet ingevuld worden" xml:space="preserve">
    <value>The stock must be filled in</value>
  </data>
  <data name="Dit veld moet een mailadres zijn" xml:space="preserve">
    <value>This field must be a mail address</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Extensie" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="Gebruikers id" xml:space="preserve">
    <value>User id</value>
  </data>
  <data name="Gebruikersnaam" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Geen geldig telefoonnummer ingegeven" xml:space="preserve">
    <value>Invalid telephone number</value>
  </data>
  <data name="Herhaal nieuw wachtwoord" xml:space="preserve">
    <value>Repeat new password</value>
  </data>
  <data name="Het bedrijf moet ingevuld worden" xml:space="preserve">
    <value>The company must be filled in</value>
  </data>
  <data name="Het emailadres moet ingevuld worden" xml:space="preserve">
    <value>The email address must be filled in</value>
  </data>
  <data name="Het land moet ingevuld worden" xml:space="preserve">
    <value>The country must be filled in</value>
  </data>
  <data name="Het nieuwe wachtwoord moet ingevuld worden" xml:space="preserve">
    <value>The new password must be filled in</value>
  </data>
  <data name="Het oude wachtwoord moet ingevuld worden" xml:space="preserve">
    <value>The old password must be filled in</value>
  </data>
  <data name="Het rekeningnummer moet ingevuld worden" xml:space="preserve">
    <value>The account number must be entered</value>
  </data>
  <data name="Het telefoonnummer moet ingevuld worden" xml:space="preserve">
    <value>The telephone number must be filled in</value>
  </data>
  <data name="Het wachtwoord moet ingevuld worden" xml:space="preserve">
    <value>The password must be filled in</value>
  </data>
  <data name="Hoeveelheid" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Land" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Landcode" xml:space="preserve">
    <value>Country code</value>
  </data>
  <data name="Naam" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Nieuw wachtwoord" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Omschrijving" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Order datum" xml:space="preserve">
    <value>Order date</value>
  </data>
  <data name="Oud wachtwoord" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="Postcode" xml:space="preserve">
    <value>Postalcode</value>
  </data>
  <data name="Prijs" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Product id" xml:space="preserve">
    <value>Product id</value>
  </data>
  <data name="Producten" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Productnaam" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="Rekeningnummer" xml:space="preserve">
    <value>Account number</value>
  </data>
  <data name="Rollen" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Stad" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Straat" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Telefoonnummer" xml:space="preserve">
    <value>Telephone number</value>
  </data>
  <data name="Totale prijs" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="Voornaam" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Voorraad" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="Wachtwoord" xml:space="preserve">
    <value>Password</value>
  </data>
</root>